services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_USER: user
      DB_PASSWORD: password
      DB_ENDPOINT: db
      DB_PORT: 3306
      DREAMKAST_NAMESPACES: local
    working_dir: /
    ports:
      - "8088:8080"
    entrypoint: ["/dkw", "serve"]
    develop:
      watch:
        - action: rebuild
          path: internal
        - action: rebuild
          path: cmd
        - action: rebuild
          path: go.sum
    depends_on:
      init:
        condition: service_completed_successfully
      db:
        condition: service_healthy
  init:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_USER: user
      DB_PASSWORD: password
      DB_ENDPOINT: db
      DB_PORT: 3306
      DREAMKAST_NAMESPACES: local
    working_dir: /
    entrypoint: ["/dkw", "dbmigrate"]
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: internal/infrastructure/db/migrations
  db:
    image: mysql/mysql-server:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      #TZ: 'Asia/Tokyo'
    cap_add:
      - SYS_NICE
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_0900_ai_ci --default-authentication-plugin=mysql_native_password
    volumes:
    - mysql-data:/var/lib/mysql
    - ./dev/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
    - "13306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 5s
      timeout: 10s
      retries: 10
volumes:
  mysql-data:
