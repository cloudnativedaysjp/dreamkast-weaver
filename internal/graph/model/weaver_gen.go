package model

// Code generated by "weaver generate". DO NOT EDIT.
import (
	"fmt"
	"github.com/ServiceWeaver/weaver/runtime/codegen"
)

// Local stub implementations.

// Client stub implementations.

// Server stub implementations.

// AutoMarshal implementations.

var _ codegen.AutoMarshal = &CreateViewEventInput{}

func (x *CreateViewEventInput) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("CreateViewEventInput.WeaverMarshal: nil receiver"))
	}
	enc.String((string)(x.ConfName))
	enc.Int(x.ProfileID)
	enc.Int(x.TrackID)
	enc.Int(x.TalkID)
	enc.Int(x.SlotID)
}

func (x *CreateViewEventInput) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("CreateViewEventInput.WeaverUnmarshal: nil receiver"))
	}
	*(*string)(&x.ConfName) = dec.String()
	x.ProfileID = dec.Int()
	x.TrackID = dec.Int()
	x.TalkID = dec.Int()
	x.SlotID = dec.Int()
}

var _ codegen.AutoMarshal = &StampChallenge{}

func (x *StampChallenge) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("StampChallenge.WeaverMarshal: nil receiver"))
	}
	enc.Int(x.SlotID)
	enc.String((string)(x.Condition))
	enc.Int(x.UpdatedAt)
}

func (x *StampChallenge) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("StampChallenge.WeaverUnmarshal: nil receiver"))
	}
	x.SlotID = dec.Int()
	*(*string)(&x.Condition) = dec.String()
	x.UpdatedAt = dec.Int()
}

var _ codegen.AutoMarshal = &StampOnSiteInput{}

func (x *StampOnSiteInput) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("StampOnSiteInput.WeaverMarshal: nil receiver"))
	}
	enc.String((string)(x.ConfName))
	enc.Int(x.ProfileID)
	enc.Int(x.TrackID)
	enc.Int(x.TalkID)
	enc.Int(x.SlotID)
}

func (x *StampOnSiteInput) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("StampOnSiteInput.WeaverUnmarshal: nil receiver"))
	}
	*(*string)(&x.ConfName) = dec.String()
	x.ProfileID = dec.Int()
	x.TrackID = dec.Int()
	x.TalkID = dec.Int()
	x.SlotID = dec.Int()
}

var _ codegen.AutoMarshal = &StampOnlineInput{}

func (x *StampOnlineInput) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("StampOnlineInput.WeaverMarshal: nil receiver"))
	}
	enc.String((string)(x.ConfName))
	enc.Int(x.ProfileID)
	enc.Int(x.SlotID)
}

func (x *StampOnlineInput) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("StampOnlineInput.WeaverUnmarshal: nil receiver"))
	}
	*(*string)(&x.ConfName) = dec.String()
	x.ProfileID = dec.Int()
	x.SlotID = dec.Int()
}

var _ codegen.AutoMarshal = &ViewingSlot{}

func (x *ViewingSlot) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("ViewingSlot.WeaverMarshal: nil receiver"))
	}
	enc.Int(x.SlotID)
	enc.Int(x.ViewingTime)
}

func (x *ViewingSlot) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("ViewingSlot.WeaverUnmarshal: nil receiver"))
	}
	x.SlotID = dec.Int()
	x.ViewingTime = dec.Int()
}

var _ codegen.AutoMarshal = &VoteCount{}

func (x *VoteCount) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("VoteCount.WeaverMarshal: nil receiver"))
	}
	enc.Int(x.TalkID)
	enc.Int(x.Count)
}

func (x *VoteCount) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("VoteCount.WeaverUnmarshal: nil receiver"))
	}
	x.TalkID = dec.Int()
	x.Count = dec.Int()
}

var _ codegen.AutoMarshal = &VoteInput{}

func (x *VoteInput) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("VoteInput.WeaverMarshal: nil receiver"))
	}
	enc.String((string)(x.ConfName))
	enc.Int(x.TalkID)
	enc.String(x.GlobalIP)
}

func (x *VoteInput) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("VoteInput.WeaverUnmarshal: nil receiver"))
	}
	*(*string)(&x.ConfName) = dec.String()
	x.TalkID = dec.Int()
	x.GlobalIP = dec.String()
}
