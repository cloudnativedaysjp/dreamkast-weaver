// Code generated by MockGen. DO NOT EDIT.
// Source: aws.go

// Package aws is a generated GoMock package.
package aws

import (
	context "context"
	value "dreamkast-weaver/internal/dkui/value"
	reflect "reflect"

	types "github.com/aws/aws-sdk-go-v2/service/ivs/types"
	gomock "github.com/golang/mock/gomock"
)

// MockAWSClient is a mock of AWSClient interface.
type MockAWSClient struct {
	ctrl     *gomock.Controller
	recorder *MockAWSClientMockRecorder
}

// MockAWSClientMockRecorder is the mock recorder for MockAWSClient.
type MockAWSClientMockRecorder struct {
	mock *MockAWSClient
}

// NewMockAWSClient creates a new mock instance.
func NewMockAWSClient(ctrl *gomock.Controller) *MockAWSClient {
	mock := &MockAWSClient{ctrl: ctrl}
	mock.recorder = &MockAWSClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAWSClient) EXPECT() *MockAWSClientMockRecorder {
	return m.recorder
}

// IVSGetStream mocks base method.
func (m *MockAWSClient) IVSGetStream(ctx context.Context, ca value.ChannelArn) (*types.Stream, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IVSGetStream", ctx, ca)
	ret0, _ := ret[0].(*types.Stream)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IVSGetStream indicates an expected call of IVSGetStream.
func (mr *MockAWSClientMockRecorder) IVSGetStream(ctx, ca interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IVSGetStream", reflect.TypeOf((*MockAWSClient)(nil).IVSGetStream), ctx, ca)
}
