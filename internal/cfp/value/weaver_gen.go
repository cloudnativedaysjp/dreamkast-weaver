// go:build !ignoreWeaverGen

package value

// Code generated by "weaver generate". DO NOT EDIT.
import (
	"fmt"
	"github.com/ServiceWeaver/weaver"
	"github.com/ServiceWeaver/weaver/runtime/codegen"
)

var _ codegen.LatestVersion = codegen.Version[[0][11]struct{}]("You used 'weaver generate' codegen version 0.11.0, but you built your code with an incompatible weaver module version. Try upgrading 'weaver generate' and re-running it.")

// weaver.Instance checks.

// weaver.Router checks.

// Local stub implementations.

// Client stub implementations.

// Server stub implementations.

// AutoMarshal implementations.

var _ codegen.AutoMarshal = (*ConfName)(nil)

type __is_ConfName[T ~struct {
	weaver.AutoMarshal
	value ConferenceKind
}] struct{}

var _ __is_ConfName[ConfName]

func (x *ConfName) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("ConfName.WeaverMarshal: nil receiver"))
	}
	enc.String((string)(x.value))
}

func (x *ConfName) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("ConfName.WeaverUnmarshal: nil receiver"))
	}
	*(*string)(&x.value) = dec.String()
}

var _ codegen.AutoMarshal = (*TalkID)(nil)

type __is_TalkID[T ~struct {
	weaver.AutoMarshal
	value int32
}] struct{}

var _ __is_TalkID[TalkID]

func (x *TalkID) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("TalkID.WeaverMarshal: nil receiver"))
	}
	enc.Int32(x.value)
}

func (x *TalkID) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("TalkID.WeaverUnmarshal: nil receiver"))
	}
	x.value = dec.Int32()
}
